<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <!-- TODO GSSO-534 Upgrade to Spring Boot 3.x -->
        <version>2.7.18</version>
        <relativePath/><!-- Lookup parent from repository. -->
    </parent>

    <groupId>ee.ria.govsso</groupId>
    <artifactId>govsso-enduserselfservice</artifactId>
    <version>0.4.6</version>
    <!-- Support servlet container as described in https://docs.spring.io/spring-boot/docs/2.7.x/reference/htmlsingle/#howto.traditional-deployment.war -->
    <packaging>war</packaging>

    <name>GovSSO End User Self-Service</name>
    <licenses>
        <license>
            <name>MIT</name>
            <url>https://opensource.org/licenses/MIT</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <!-- Property values here can be overridden from command line, but plugin <configuration> values below can't be
        (see https://issues.apache.org/jira/browse/MNG-4979 ). -->
        <maven.compiler.release>17</maven.compiler.release>
        <spring-boot.build-image.imageName>${project.artifactId}:latest</spring-boot.build-image.imageName><!-- Use "latest" tag instead of version tag. -->

        <elastic-apm.version>1.47.1</elastic-apm.version>
        <ignite.version>2.17.0</ignite.version>
        <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>
        <logstash-logback-encoder.version>7.3</logstash-logback-encoder.version><!-- TODO Upgrade to >= 7.4 after Spring Boot is upgraded to 3.x which includes Logback >= 1.3 -->
        <wiremock.version>2.35.2</wiremock.version> <!-- TODO Upgrade to >=3.0.1 after Spring Boot is upgraded to 3.x which includes jetty >= 11.0.12 -->
    </properties>

    <dependencies><!-- Ordered by scope, groupId, artifactId. -->
        <dependency>
            <groupId>co.elastic.apm</groupId>
            <artifactId>apm-agent-api</artifactId>
            <version>${elastic-apm.version}</version>
        </dependency>
        <dependency>
            <groupId>co.elastic.apm</groupId>
            <artifactId>apm-agent-attach</artifactId>
            <version>${elastic-apm.version}</version>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>
        <dependency>
            <groupId>nz.net.ultraq.thymeleaf</groupId>
            <artifactId>thymeleaf-layout-dialect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-core</artifactId>
            <version>${ignite.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.ignite</groupId>
            <artifactId>ignite-slf4j</artifactId>
            <version>${ignite.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- Support servlet container as described in https://docs.spring.io/spring-boot/docs/2.7.x/reference/htmlsingle/#howto.traditional-deployment.war -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock-jre8</artifactId>
            <version>${wiremock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>spring-mock-mvc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- Produce artifact name without version, so it would be easier to reference in pipeline. -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!--
                        Setting target value here is only needed to fix IntelliJ IDEA not detecting target version from
                        global maven.compiler.release property. Maven compiler works correctly without it.
                    -->
                    <target>${maven.compiler.release}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <runOrder>random</runOrder>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <environmentVariables>
                        <IGNITE_HOME>${project.build.directory}/ignite</IGNITE_HOME>
                    </environmentVariables>
                    <argLine>
                        -DIGNITE_NO_ASCII=true
                        -DIGNITE_UPDATE_NOTIFIER=false
                        <!--
                          Make necessary JDK APIs available to Ignite according to
                          https://ignite.apache.org/docs/2.15.0/setup#running-ignite-with-java-11-or-later
                          "Java 17" configuration. Additionally, `java.time` is added to support session timeout.
                        -->
                        --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED
                        --add-opens=java.base/jdk.internal.misc=ALL-UNNAMED
                        --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
                        --add-opens=java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED
                        --add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED
                        --add-opens=java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED
                        --add-opens=java.base/java.io=ALL-UNNAMED
                        --add-opens=java.base/java.nio=ALL-UNNAMED
                        --add-opens=java.base/java.util=ALL-UNNAMED
                        --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
                        --add-opens=java.base/java.util.concurrent.locks=ALL-UNNAMED
                        --add-opens=java.base/java.lang=ALL-UNNAMED
                        --add-opens=java.base/java.time=ALL-UNNAMED
                        <!-- Ignite aggregates all network interface addresses to form work directory name. When machine
                             has many IPv6 network interfaces, work directory name length may exceed file name length
                             limit. Disable IPv6 usage to mitigate this. -->
                        -Djava.net.preferIPv4Stack=true
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <environmentVariables>
                        <ELASTIC_APM_ENABLED>false</ELASTIC_APM_ENABLED>
                        <IGNITE_HOME>${project.build.directory}/ignite</IGNITE_HOME>
                    </environmentVariables>
                    <jvmArguments>
                        -DIGNITE_NO_ASCII=true
                        -DIGNITE_UPDATE_NOTIFIER=false
                        <!--
                          Make necessary JDK APIs available to Ignite according to
                          https://ignite.apache.org/docs/2.15.0/setup#running-ignite-with-java-11-or-later
                          "Java 17" configuration. Additionally, `java.time` is added to support session timeout.
                        -->
                        --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED
                        --add-opens=java.base/jdk.internal.misc=ALL-UNNAMED
                        --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
                        --add-opens=java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED
                        --add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED
                        --add-opens=java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED
                        --add-opens=java.base/java.io=ALL-UNNAMED
                        --add-opens=java.base/java.nio=ALL-UNNAMED
                        --add-opens=java.base/java.util=ALL-UNNAMED
                        --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
                        --add-opens=java.base/java.util.concurrent.locks=ALL-UNNAMED
                        --add-opens=java.base/java.lang=ALL-UNNAMED
                        --add-opens=java.base/java.time=ALL-UNNAMED
                        <!-- Ignite aggregates all network interface addresses to form work directory name. When machine
                             has many IPv6 network interfaces, work directory name length may exceed file name length
                             limit. Disable IPv6 usage to mitigate this. -->
                        -Djava.net.preferIPv4Stack=true
                    </jvmArguments>
                    <image>
                        <env>
                            <BPE_IGNITE_HOME>/tmp/ignite</BPE_IGNITE_HOME>
                            <BPE_DELIM_JAVA_TOOL_OPTIONS xml:space="preserve"> </BPE_DELIM_JAVA_TOOL_OPTIONS>
                            <BPE_APPEND_JAVA_TOOL_OPTIONS>
                                -DIGNITE_NO_ASCII=true
                                -DIGNITE_UPDATE_NOTIFIER=false
                                <!--
                                  Make necessary JDK APIs available to Ignite according to
                                  https://ignite.apache.org/docs/2.15.0/setup#running-ignite-with-java-11-or-later
                                  "Java 17" configuration. Additionally, `java.time` is added to support session
                                  timeout.
                                -->
                                --add-opens=jdk.management/com.sun.management.internal=ALL-UNNAMED
                                --add-opens=java.base/jdk.internal.misc=ALL-UNNAMED
                                --add-opens=java.base/sun.nio.ch=ALL-UNNAMED
                                --add-opens=java.management/com.sun.jmx.mbeanserver=ALL-UNNAMED
                                --add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED
                                --add-opens=java.base/sun.reflect.generics.reflectiveObjects=ALL-UNNAMED
                                --add-opens=java.base/java.io=ALL-UNNAMED
                                --add-opens=java.base/java.nio=ALL-UNNAMED
                                --add-opens=java.base/java.util=ALL-UNNAMED
                                --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
                                --add-opens=java.base/java.util.concurrent.locks=ALL-UNNAMED
                                --add-opens=java.base/java.lang=ALL-UNNAMED
                                --add-opens=java.base/java.time=ALL-UNNAMED
                            </BPE_APPEND_JAVA_TOOL_OPTIONS>
                        </env>
                    </image>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <!-- TODO GSSO-534 Replace with io.github.git-commit-id:git-commit-id-maven-plugin and remove
                      offline=true after upgrading to Spring Boot 3. Starting from 5.0.0 offline=true is default. -->
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <configuration>
                    <offline>true</offline>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
